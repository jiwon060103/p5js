let blushColor;
let blushWidth, blushHeight;
let isLeftWink = false;
let isRightWink = false;

function setup() {
  createCanvas(500, 500);
  blushColor = color("#F3B6CBE2");
  blushWidth = 60;
  blushHeight = 40;
}

function draw() {
  background("#F6DEE2");

  if (mouseIsPressed) {
    blushColor = color(255, 100, 120, 250); 
    blushWidth = 100;
    blushHeight = 80;
  } else {
    blushColor = color("#F3B6CBE2");
    blushWidth = 60;
    blushHeight = 40;
  }

  noStroke();
  fill(0);
  ellipse(239, 43, 90, 80);

  fill("#73A23E");
  noStroke();
  rect(150, 440, 200, 140);
  strokeWeight(2);
  stroke(0);
  line(190, 467, 186, 500);
  line(318, 467, 322, 500);
  noStroke();
  arc(162, 495, 90, 112, radians(155), radians(-80));
  arc(341, 493, 90, 110, radians(-80), radians(155));

  noStroke();
  fill("#FFE9C7E2");
  rect(217, 400, 70, 40);
  fill("#FFE9C7F9");
  stroke(0);
  arc(252, 440, 90, 60, 0, PI);

  fill("#FFE9C7E2");
  stroke(0);
  strokeWeight(4);
  arc(90, 250, 50, 50, HALF_PI, -HALF_PI);
  arc(410, 250, 50, 50, -HALF_PI, HALF_PI);

  fill("#FFE9C7E2");
  stroke(0);
  strokeWeight(2);
  ellipse(250, 250, 330, 340);

  strokeWeight(5);
  noFill();
  stroke("#514F4F");
  arc(187, 228, 90, 50, radians(-160), radians(-30));
  arc(315, 228, 90, 50, radians(-158), radians(-28));

  strokeWeight(4);
  line(250, 269, 270, 290);
  line(270, 290, 250, 298);

  fill("#DC4141");
  noStroke();
  arc(251, 326, 70, 80, 0, PI);

  // 👇 홍조
  noStroke();
  fill(blushColor);
  ellipse(345, 286, blushWidth, blushHeight);
  ellipse(155, 286, blushWidth, blushHeight);

  // 👁 눈 (조건에 따라 윙크)
  noFill();
  strokeWeight(5);
  stroke(0);
  if (isLeftWink) {
    line(160,225,200,240);
    line(160,240,200,240);
    line(160,260,200,240);
  } else {
    arc(190, 250, 40, 50, PI, 0);
  }

  if (isRightWink) {
   line(330,225,290,240);
    line(330,240,290,240);
    line(330,260,290,240);
  } else {
    arc(310, 250, 40, 50, PI, 0);
  }

  noFill();
  stroke(0);
  strokeWeight(2);
  arc(87, 312, 40, 80, radians(100), radians(270));
  arc(412, 311, 40, 80, radians(-90), radians(-270));

  stroke("#A37A6B");
  point(211, 274);
  point(190, 274);
  point(222, 289);
  point(205, 289);
  point(283, 289);
  point(295, 274);
  point(315, 274);
  point(322, 289);
  point(302, 289);

  stroke(0);
  strokeWeight(4);
  noFill();
  arc(236, 234, 300, 300, radians(-180), radians(270));
  arc(245, 234, 330, 300, radians(-90), radians(0));
  arc(239, 240, 300, 300, radians(-180), radians(270));
  arc(245, 240, 330, 300, radians(-90), radians(0));
  arc(238, 245, 300, 300, radians(-180), radians(270));
  arc(243, 245, 330, 300, radians(-90), radians(0));
  arc(239, 251, 300, 300, radians(-180), radians(270));
  arc(242, 252, 330, 300, radians(-90), radians(0));
  arc(236, 258, 300, 300, radians(-180), radians(270));
  arc(245, 258, 330, 300, radians(-90), radians(0));
  arc(239, 264, 300, 300, radians(-180), radians(270));
  arc(245, 264, 330, 300, radians(-90), radians(0));
  arc(238, 269, 300, 300, radians(-180), radians(270));
  arc(245, 269, 330, 300, radians(-90), radians(0));

  stroke(255, 152, 0);
  strokeWeight(7);
  line(224, 81, 257, 81);

  stroke("#E71E1E");
  strokeWeight(30);
  line(50, 50, 70, 80);
  line(90, 50, 70, 80);
}

// 👉 방향키 눌렀을 때 윙크 활성화
function keyPressed() {
  if (keyCode === LEFT_ARROW) {
    isLeftWink = true;
  } else if (keyCode === RIGHT_ARROW) {
    isRightWink = true;
  }
  
  if (key === 's') {
    saveGif('myface', 10);
  }
}

// 👉 방향키에서 손 뗄 때 윙크 해제
function keyReleased() {
  if (keyCode === LEFT_ARROW) {
    isLeftWink = false;
  } else if (keyCode === RIGHT_ARROW) {
    isRightWink = false;
  }
  
}
